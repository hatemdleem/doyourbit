@model CharityStartAtHome.Models.Cloth
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ul class="breadcrumb">
    <li>@Html.ActionLink("What I can do", "Clothm", "Clothes")</li>
    <li>@Html.ActionLink("Where I can give", "List", "Clothes")</li>
    <li style="color:black">Detail page</li>
</ul>

<div class="container">
    <div class="row">
        <div class="col-sx-12 text-center">
            <h1>Where to donate</h1>
            <h2>@Html.DisplayFor(model => model.Name)</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Service):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Service)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Description):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Description)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Materials):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Materials)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.OpenTime):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.OpenTime)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.State):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.State)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Suburb):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Suburb)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Address):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Address)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Postcode):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Postcode)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Phone):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Phone)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Email):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Email)</label>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5">
            <h4 class="text-right">@Html.DisplayNameFor(model => model.Findme):</h4>
        </div>
        <div class="col-sm-7">
            <label>@Html.DisplayFor(model => model.Findme)</label>
        </div>
    </div>

    <div id="floating-panel">
        <select id="mode" class="btn btn-success">
            <option value="DRIVING">Driving</option>
            <option value="WALKING">Walking</option>
            <option value="BICYCLING">Bicycling</option>
            <option value="TRANSIT">Transit</option>
        </select>
    </div>

    <div class="row">
        <div class="col-xs-12 text-center">
            <hr class="style-two" style="width:80%; margin-top:70px">
            <h2>Location map & Café Nearby</h2>
        </div>
        <div class="col-xs-12">
            <div id="details_map"></div>
            <div id="right-panel"></div>
        </div>
    </div>

    <a id="back-to-top" href="#" class="btn btn-primary btn-lg back-to-top" role="button" title="Return to the top" data-toggle="tooltip" data-placement="left"><span class="glyphicon glyphicon-chevron-up"></span></a>

    <script type="text/javascript">
        // GLOBALS
        var map = null;
        var geocoder = new google.maps.Geocoder();
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var directionsService = new google.maps.DirectionsService;

        // MODELS
        function Location(title, latitude, longitude, number) {
            var self = this;
            self.Title = title;
            self.Latitude = latitude;
            self.Longitude = longitude;
            self.Number = number;
        }

        // EVENTS
        $('#mode').on('change', function () {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(calculateRoute, showError, { maximumAge: 0 });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        });

        $(document).ready(function () {

            var address = "Fara Gera d'Adda";

            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status === 'OK') {

                    map = new google.maps.Map(document.getElementById('details_map'), {
                        center: results[0].geometry.location,
                        zoom: 17
                    });

                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(results[0].geometry.location.Latitude, results[0].geometry.location.Longitude),
                        title: address
                    });

                    marker.setMap(map);

                    var bounds = new google.maps.LatLngBounds();
                    directionsDisplay.setMap(map);
                    directionsDisplay.setPanel(document.getElementById('right-panel'));

                    var control = document.getElementById('floating-panel');
                    control.style.display = 'block';
                    map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

                    var service = new google.maps.places.PlacesService(map);
                    service.nearbySearch({
                        location: results[0].geometry.location,
                        radius: 500,
                        type: ['cafe']
                    }, processResults);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(calculateRoute, showError, { maximumAge: 0 });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        });

        // FUCNTIONS
        function calculateRoute() {

            var selectedMode = $('#mode').value;
            var start = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            var end = address;

            directionsService.route({
                origin: start,
                destination: end,
                travelMode: selectedMode
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }

        function addUserMarker() {
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
                title: "Your location",
                icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
            });

            marker.setMap(map);
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    console.log("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    console.log("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    console.log("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    console.log("An unknown error occurred.");
                    break;
            }
        }
    </script>
</div>