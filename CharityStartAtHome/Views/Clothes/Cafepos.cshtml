<!DOCTYPE html>
@model CharityStartAtHome.Models.Cloth

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Place search pagination</title>
    <style>
         /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
         #map {
             height: 100%;
         }
         /* Optional: Makes the sample page fill the window. */
         html, body {
             height: 100%;
             margin: 0;
             padding: 0;
         }

         #right-panel {
             font-family: 'Roboto','sans-serif';
             line-height: 30px;
             padding-left: 10px;
         }

             #right-panel select, #right-panel input {
                 font-size: 15px;
             }

             #right-panel select {
                 width: 100%;
             }

             #right-panel i {
                 font-size: 12px;
             }

         #right-panel {
             font-family: Arial, Helvetica, sans-serif;
             position: absolute;
             right: 5px;
             top: 60%;
             margin-top: -195px;
             height: 330px;
             width: 200px;
             padding: 5px;
             z-index: 5;
             border: 1px solid #999;
             background: #fff;
         }

         h2 {
             font-size: 22px;
             margin: 0 0 5px 0;
         }

         ul {
             list-style-type: none;
             padding: 0;
             margin: 0;
             height: 271px;
             width: 200px;
             overflow-y: scroll;
         }

         li {
             background-color: #f1f1f1;
             padding: 10px;
             text-overflow: ellipsis;
             white-space: nowrap;
             overflow: hidden;
         }

             li:nth-child(odd) {
                 background-color: #fcfcfc;
             }

         #more {
             width: 100%;
             margin: 5px 0 0 0;
         }
    </style>
    <body>
        <div id="map"></div>
        <dd class="col-sm-7" id="address">

            <p id="address">@Html.DisplayFor(model => model.Address)
        </dd>

        <div style="display: none">
            <div id="info-content">
                <table>
                    <tr id="iw-url-row" class="iw_table_row">
                        <td id="iw-icon" class="iw_table_icon"></td>
                        <td id="iw-url"></td>
                    </tr>
                    <tr id="iw-address-row" class="iw_table_row">
                        <td class="iw_attribute_name">Address:</td>
                        <td id="iw-address"></td>
                    </tr>
                    <tr id="iw-phone-row" class="iw_table_row">
                        <td class="iw_attribute_name">Telephone:</td>
                        <td id="iw-phone"></td>
                    </tr>
                    <tr id="iw-rating-row" class="iw_table_row">
                        <td class="iw_attribute_name">Rating:</td>
                        <td id="iw-rating"></td>
                    </tr>
                    <tr id="iw-website-row" class="iw_table_row">
                        <td class="iw_attribute_name">Website:</td>
                        <td id="iw-website"></td>
                    </tr>
                </table>
            </div>
        </div>

        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAByi7wbsNEkpNZtepHeoiKdThuSoJpO40&libraries=places&callback=initMap" async defer></script>
    </body>
    <script>
        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        var map,  service, infoWindow;
        var markers = [];
        var MARKER_PATH = 'https://developers.google.com/maps/documentation/javascript/images/marker_green';
        var hostnameRegexp = new RegExp('^https?://.+?/');




        function initMap() {
            var address = $("#address").text().toString();
            var geocoder = new google.maps.Geocoder();
        
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status === 'OK') {
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: results[0].geometry.location,
                        zoom: 17
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
                 service = new google.maps.places.PlacesService(map);
                 service.nearbySearch({
                    location: results[0].geometry.location,
                    radius: 500,
                    type: ['cafe']
                }, processResults);

            });

            infoWindow = new google.maps.InfoWindow({
                content: document.getElementById('info-content')
            });

        }

        function processResults(results, status, pagination) {
            if (status !== google.maps.places.PlacesServiceStatus.OK) {
                return;
            } else {
                createMarkers(results);

            }
        }

        function createMarkers(places) {
            var bounds = new google.maps.LatLngBounds();

            for (var i = 0, place; place = places[i]; i++) {
                var image = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                var marker = new google.maps.Marker({
                    map: map,
                    icon: image,
                    title: place.name,
                    position: place.geometry.location
                });

                google.maps.event.addListener(marker, 'click', function () {
                    service.getDetails(place, function (result, status) {
                        if (status !== google.maps.places.PlacesServiceStatus.OK) {
                            console.error(status);
                            return;
                        }
                        infoWindow.setContent(result.name);
                        infoWindow.open(map, marker);
                    });
                });


                bounds.extend(place.geometry.location);
            }
            map.fitBounds(bounds);
        }

        function dropMarker(i) {
            return function () {
                markers[i].setMap(map);
            };
        }


        function showInfoWindow() {
            var marker = this;
            places.getDetails({ placeId: marker.placeResult.place_id },
                function (place, status) {
                    if (status !== google.maps.places.PlacesServiceStatus.OK) {
                        return;
                    }
                    infoWindow.open(map, marker);
                    buildIWContent(place);
                });
        }


        function buildIWContent(place) {
            document.getElementById('iw-icon').innerHTML = '<img class="hotelIcon" ' +
                'src="' + place.icon + '"/>';
            document.getElementById('iw-url').innerHTML = '<b><a href="' + place.url +
                '">' + place.name + '</a></b>';
            document.getElementById('iw-address').textContent = place.vicinity;

            if (place.formatted_phone_number) {
                document.getElementById('iw-phone-row').style.display = '';
                document.getElementById('iw-phone').textContent =
                    place.formatted_phone_number;
            } else {
                document.getElementById('iw-phone-row').style.display = 'none';
            }

            // Assign a five-star rating to the hotel, using a black star ('&#10029;')
            // to indicate the rating the hotel has earned, and a white star ('&#10025;')
            // for the rating points not achieved.
            if (place.rating) {
                var ratingHtml = '';
                for (var i = 0; i < 5; i++) {
                    if (place.rating < (i + 0.5)) {
                        ratingHtml += '&#10025;';
                    } else {
                        ratingHtml += '&#10029;';
                    }
                    document.getElementById('iw-rating-row').style.display = '';
                    document.getElementById('iw-rating').innerHTML = ratingHtml;
                }
            } else {
                document.getElementById('iw-rating-row').style.display = 'none';
            }

            // The regexp isolates the first part of the URL (domain plus subdomain)
            // to give a short URL for displaying in the info window.
            if (place.website) {
                var fullUrl = place.website;
                var website = hostnameRegexp.exec(place.website);
                if (website === null) {
                    website = 'http://' + place.website + '/';
                    fullUrl = website;
                }
                document.getElementById('iw-website-row').style.display = '';
                document.getElementById('iw-website').textContent = website;
            } else {
                document.getElementById('iw-website-row').style.display = 'none';
            }
        }

    </script>
</head>

</html>