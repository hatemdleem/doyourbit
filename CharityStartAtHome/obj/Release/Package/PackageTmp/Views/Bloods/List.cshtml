@*@model IEnumerable<CharityStartAtHome.Models.Cloth>*@
@model PagedList.IPagedList<CharityStartAtHome.Models.Blood>
@*@{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@
@using PagedList.Mvc;
<style>
    .back-to-top {
        cursor: pointer;
        position: fixed;
        bottom: 20px;
        right: 20px;
        display: none;
    }
    #map {
        height: 400px;
        width: 100%;
        margin-left: 100px;
    }

    select {
        color: #2aaf8e;
    }

    h1 {
        font-family: "Arial Black", Gadget, sans-serif;
        color: #2aaf8e;
        font-size: 50px;
    }

    h2 {
        font-family: "Arial Black", Gadget, sans-serif;
        color: #2aaf8e;
        font-size: 30px;
    }

    h3 {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 20px;
    }
    h4 {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 15px;
    }

    p {
        font-family: 'Arial Unicode MS';
        font-size: 20px;
    }

    b {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 20px;
    }

    ul.pagination {
        margin: 0;
    }

    .pagination li {
        list-style-type: none;
        float: left;
        min-width: 15px;
    }



    input[type=text] {
        width: 700px;
        box-sizing: border-box;
        border: 2px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
        background-color: white;
        background-image: url('searchicon.png');
        background-position: 10px 10px;
        background-repeat: no-repeat;
        padding: 12px 20px 12px 40px;
        -webkit-transition: width 0.4s ease-in-out;
        transition: width 0.4s ease-in-out;
    }

        /*input[type=text]:focus {
            width: 300%;
        }*/

    .text {
        font-family: 'Arial Unicode MS';
        color: #2aaf8e;
        font-size: 20px;
    }

    ul.breadcrumb {
        padding: 8px 16px;
        list-style: none;
        background-color: #eee;
    }

        ul.breadcrumb li {
            display: inline;
        }

            ul.breadcrumb li + li:before {
                padding: 8px;
                color: black;
                content: "/\00a0";
            }

    /*ul.breadcrumb li a {
                color: green;
            }*/
</style>
<html>

<body>


    <ul class="breadcrumb" style="margin-top:50px">
        Your are here:
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink("What you can help", "Index", "Home")</li>
        <li>@Html.ActionLink("Donate blood", "Bloodm", "Bloods")</li>
        <li style="color:black">Find nearby places</li>
    </ul>
    
    <h1 style="margin-left:20px">Find blood donation centres near you</h1>
    <h3 style="margin-left:40px;">
        <div id="temp">
        </div>
        <div id="temp2">
        </div>
        <div id="minutely"></div>
    </h3>
    @using (Html.BeginForm("List", "Bloods", FormMethod.Get))
    {
        <div class="row" id="inputGroup" style="padding-left:40px; margin-top:100px">
            <p class="text-center">

                <input type="text" name="SearchString" placeholder="Search by Postcode e.g. 3000 or Address" value="@Request["SearchString"]" autofocus style="display: inline-block; width:700px">
                <button class="btn btn-success btn-lg" value="Search"> Search    <i class="glyphicon glyphicon-search"></i></button>
            </p>

        </div>
            @*<b style="margin-left:20px"> Search Clothes stores by: </b>*@
            @*<div style="margin-left:20px">
                    <p>

                        <text style="margin-left:20px">Address</text>@Html.RadioButton("option", "address", new { Checked = "checked" } )<text style="margin-left:20px">Suburb</text>@Html.RadioButton("option", "suburb")
                        <text>Post code @Html.RadioButton("option", "postcode")</text>
                    </p>
                </div>*@
        
    }
    @*<p>@Html.ActionLink("Create New", "Create")</p>*@

    @*<select id="mySelect" class="btn-success btn-lg" style="display:none">
        <option value="1"> PostCode*@
    @*<option value="2">Address*@

    @*</select>

        <div class="row" id="inputGroup" style="padding-left:40px">

            <input id="myInput2" type="number" maxlength="4" style="width:600px" name="q" placeholder="Search by Postcode..">
            <br />
            <p id="demo" style="color:red"></p>
            <button class="btn btn-success btn-lg" type="button" onclick="checkNumber()" onkeydown="onKeyDown(event)"><i class="fa fa-search fa-fw"></i> Search</button>
            <button class="btn btn-success btn-lg" type="button" onclick="showAll()"><i class="fa fa-search fa-fw"></i> List All</button>
        </div>*@


    @if (Model.Count == 0)
    {   
        <p style="margin-left:100px"> <text>No blood donation center is found</text></p>
        <p style="margin-left:100px"> <text>Please make sure you input a valid postcode/address.</text></p>
    }
    @*@if (Model.Count != 0)
            {
                var count = Model.Count;
                var text = "There are " + count + " results found";
        <p style="margin-left:100px"> @text</p>
    }*@


    <div class="row">
        <div>
            <ul @*class="list-group collapse"*@ id="myUL" style="margin-right:50px; margin-left:50px">
                @foreach (var item in Model)
                {
                    <li>
                        <div class="row list-group-item flex-column">


                            <h2>@Html.DisplayFor(modelItem => item.Center)</h2>
                            
                            @*<h3>Wesite: </h3>
                                <p>@Html.DisplayFor(modelItem => item.AdditionNote)</p>*@
                           
                            <h3>Address</h3>
                             <p>@Html.DisplayFor(modelItem => item.Address)</p>
                            <h3>Open hour:</h3>
                            <p>@Html.DisplayFor(modelItem => item.Openhour)</p>
                            <h3>Contact number:</h3>
                            <p>
                                @Html.DisplayFor(modelItem => item.Phone)
                            </p>
                            <div>@Html.ActionLink("Available transport facilities & Café Nearby", "Details", new { id = item.Id }, new { @class = "btn btn-success btn-lg" })</div>
                            </div>
                    </li>

                }

            </ul>
        </div>
        @*<div class="col-sm-5">
            <div id="map"></div>
        </div>*@

    </div>
    <div class="text-center">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("List",
    new
    {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter,
        option = Request.QueryString["option"],
        search = Request.QueryString["search"]
    }))

    </div>
    <div class="text-center" style="width:100%">
        <p id="result" style="font-size:12px; color:black" class="center"></p>

    </div>
    <a id="back-to-top" href="#" class="btn btn-primary btn-lg back-to-top" role="button" title="Click to return on the top page" data-toggle="tooltip" data-placement="left"><span class="glyphicon glyphicon-chevron-up"></span></a>

    @*@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)*@
    <script>
                function myFunction() {
                    var input, filter, ul, li, a, p, i, text, j;
                    input = document.getElementById('myInput2');
                    filter = input.value.toUpperCase();
                    ul = document.getElementById("myUL");
                    li = ul.getElementsByTagName('li');
                    j = 0;
                    // Loop through all list items, and hide those who don't match the search query
                    for (i = 0; i < li.length; i++) {
                        a = li[i].getElementsByTagName('a');
                        p = a[0].getElementsByTagName('p')[1];
                        if (p.innerHTML.toUpperCase().indexOf(filter) > -1) {
                            //      a[j].style.display = "";
                            j++;
                            $("#myUL").show();
                            li[i].style.display = "";


                        } else {
                            //   a[j].style.display = "none";
                            li[i].style.display = "none";

                        }
                    }
                    text = "There are " + j + " results found";
                    document.getElementById("result").innerHTML = text;
                }

                function showAll() {
                    // Declare variables
                    var input, filter, ul, li, a, p, i;
                    ul = document.getElementById("myUL");
                    //ul.remove();
                    li = ul.getElementsByTagName('li');

                    // Loop through all list items, and hide those who don't match the search query
                    for (i = 0; i < li.length; i++) {
                        a = li[i].getElementsByTagName('a');
                        li[i].style.display = "";

                    }

                    $("#myUL").show();
                    var count = $("#myUL").children().children().length;

                    text = "There are " + count + " results found";

                    document.getElementById("result").innerHTML = text;

                }

                function myFunction2() {
                    // Declare variables
                    var input, filter, ul, li, a, p, i, text;
                    input = document.getElementById('myInput2');
                    filter = input.value.toUpperCase();
                    ul = document.getElementById("myUL");
                    li = ul.getElementsByTagName('li');

                    // Loop through all list items, and hide those who don't match the search query
                    for (i = 0; i < li.length; i++) {
                        a = li[i].getElementsByTagName('a');

                        p = a[0].getElementsByTagName('p')[0];
                        if (p.innerHTML.toUpperCase().indexOf(filter) > -1) {
                            //      a[j].style.display = "";
                            li[i].style.display = "";

                        } else {
                            //   a[j].style.display = "none";
                            li[i].style.display = "none";
                            text = "There is not correct one!"
                            document.getElementById("result").innerHTML = text;
                        }
                    }

                }


                $('#myInput2').keypress(function (e) {

                    if (e.which == '13') {
                        checkNumber();
                    }
                });


                function checkNumber() {
                    var x, text;

                    // Get the value of the input field with id="numb"
                    x = document.getElementById("myInput2").value;

                    // If x is Not a Number or less than one or greater than 10
                    if (isNaN(x)) {
                        text = "Error:Input must not be null";
                    }


                    else if (x.length > 4 || x.length < 4) {
                        text = "Error:Input must be 4 digits";
                    }

                    else if (x == 1234) {
                        text = "Error:Input invailded with no post code is 1234 ";
                    }
                    else if (!(x.startsWith("3"))) {
                        text = "Error:Input must be start with number 3 ";
                    }

                    else {
                        text = null;
                        var x = document.getElementById("mySelect").value;
                        if (x == '1') {
                            myFunction();
                        }
                        if (x == '2') {
                            myFunction2();

                        }
                    }

                    document.getElementById("demo").innerHTML = text;
                }


                function initMap() {
                    var geocoder = new google.maps.Geocoder();
                    var locations = [
                        ['Bondi Beach', -33.890542, 151.274856, 4],
                        ['Coogee Beach', -33.923036, 151.259052, 5],
                        ['Cronulla Beach', -34.028249, 151.157507, 3],
                        ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
                        ['Maroubra Beach', -33.950198, 151.259302, 1]
                    ];
                    var count = '@Model.Count()';

                        //var num = 4;
                        //document.getElementById("result2").innerHTML = count;
                        var uluru = { lat: -25.363, lng: 131.044 };
                        var map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 4,
                        center: uluru
                        });


                                     geocodeAddress(geocoder, map);
                                     function geocodeAddress(geocoder, resultsMap)
                                     {
                                         var address = $("#address").text().toString();
                                         geocoder.geocode({ 'address': address }, function(results, status) {
                                     if (status === 'OK')
                                     {
                                         resultsMap.setCenter(results[0].geometry.location);
                                         var marker = new google.maps.Marker({
                                    map: resultsMap,
                                    position: results[0].geometry.location
                                                     });
                                 } else {
                                     alert('Geocode was not successful for the following reason: ' + status);
                                 }
                             });



                         //var infowindow = new google.maps.InfoWindow();
                         //var num = Number(count);
                         //var marker, i;

                         //for (i = 0; i < num; i++) {
                         //    marker = new google.maps.Marker({
                         //        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                         //        map: map
                         //    });

                         //    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                         //        return function () {
                         //            infowindow.setContent(locations[i][0]);
                         //            infowindow.open(map, marker);
                         //        }
                         //    })(marker, i));
                         //}
                     }
    </script>
</body>

</html>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAByi7wbsNEkpNZtepHeoiKdThuSoJpO40&libraries=places&callback=initMap" async defer></script>
<script>
                                     $(document).ready(function () {
                                         $(window).scroll(function () {
                                             if ($(this).scrollTop() > 50) {
                                                 $('#back-to-top').fadeIn();
                                             } else {
                                                 $('#back-to-top').fadeOut();
                                             }
                                         });
                                         // scroll body to 0px on click
                                         $('#back-to-top').click(function () {
                                             $('#back-to-top').tooltip('hide');
                                             $('body,html').animate({
                                                 scrollTop: 0
                                             }, 800);
                                             return false;
                                         });

                                         $('#back-to-top').tooltip('show');

                                     });
</script>
<script>
                                     function weather() {

                                         var location = document.getElementById("location");
                                         var apiKey = 'b5720867ff3d98c666593de2ef32f09b'; // PLEASE SIGN UP FOR YOUR OWN API KEY
                                         var url = 'https://api.forecast.io/forecast/';

                                         navigator.geolocation.getCurrentPosition(success, error);

                                         function success(position) {
                                             latitude = position.coords.latitude;
                                             longitude = position.coords.longitude;

                                             //location.innerHTML = 'Latitude is ' + latitude + '° <br> Longitude is ' + longitude + '°';

                                             $.getJSON(url + apiKey + "/" + latitude + "," + longitude + "?callback=?", function (data) {
                                                 var str = data.currently.temperature;
                                                 var celsius = ((str - 32) / 1.8).toFixed(2);

                                                 $('#temp').html('Current temperature is ' + celsius + '° C ' + 'and the weather is ' + data.currently.summary);
                                                 $('#temp2').html('This week forecast: ' + data.daily.summary);

                                                 $('#icon').html(data.currently.icon);
                                                 $('#minutely').html(data.minutely.summary);
                                             });
                                         }

                                         function error() {
                                             location.innerHTML = "Unable to retrieve your location";
                                         }

                                         location.innerHTML = "Locating...";
                                     }

                                     weather();
</script>


